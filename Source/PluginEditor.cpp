/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin editor.

  ==============================================================================
*/

#include "PluginProcessor.h"
#include "PluginEditor.h"


//==============================================================================
TestAudioProcessorEditor::TestAudioProcessorEditor (TestAudioProcessor& p)
    : AudioProcessorEditor (&p), processor (p)
{
    // Make sure that before the constructor has finished, you've set the
    // editor's size to whatever you need it to be.
    setSize (200, 200);
    
    // these define the parameters of our slider object
    key.setSliderStyle (Slider::Rotary);
    key.setRange(0.0, 12.0, 1.0);
    key.setTextBoxStyle (Slider::NoTextBox, false, 90, 0);
    key.setPopupDisplayEnabled (true, this);
    key.setTextValueSuffix ("Key");
    key.setValue(0.0);
    
    // these define the parameters of our slider object
    mode.setSliderStyle (Slider::Rotary);
    mode.setRange(0.0, 1.0, 1.0);
    mode.setTextBoxStyle (Slider::NoTextBox, false, 90, 0);
    mode.setPopupDisplayEnabled (true, this);
    mode.setTextValueSuffix ("Mode");
    mode.setValue(0.0);
    
    // this function adds the slider to the editor
    addAndMakeVisible (&key);
    addAndMakeVisible (&mode);
    
    // add the listener to the slider
    key.addListener (this);
    mode.addListener (this);
}

void TestAudioProcessorEditor::sliderValueChanged (Slider* slider)
{
   processor.keySlider = key.getValue();
   processor.modeSlider = mode.getValue();
}

TestAudioProcessorEditor::~TestAudioProcessorEditor()
{
}

//==============================================================================
void TestAudioProcessorEditor::paint (Graphics& g)
{
    g.fillAll (Colours::white);

    g.setColour (Colours::black);
    g.setFont (15.0f);
    g.drawFittedText ("Snurmel FX", getLocalBounds(), Justification::centred, 1);
}

void TestAudioProcessorEditor::resized()
{
    // This is generally where you'll want to lay out the positions of any
    // subcomponents in your editor..
    
    // sets the position and size of the slider with arguments (x, y, width, height)
    key.setBounds (40, 30, 20, getHeight() - 60);
    
    mode.setBounds (40, 80, 20, getHeight() - 60);
}
